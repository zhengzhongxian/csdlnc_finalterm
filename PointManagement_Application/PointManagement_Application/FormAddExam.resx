<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>